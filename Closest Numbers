#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

// Comparison function for qsort
int compare(const void* a, const void* b) {
    return (*(int*)a - *(int*)b);
}

int* closestNumbers(int* arr, int n, int* returnSize) {
    qsort(arr, n, sizeof(int), compare);

    int minDiff = INT_MAX;
    int count = 0;

    // First pass: find minimum difference
    for (int i = 0; i < n - 1; i++) {
        int diff = arr[i + 1] - arr[i];
        if (diff < minDiff) {
            minDiff = diff;
            count = 2;
        } else if (diff == minDiff) {
            count += 2;
        }
    }

    // Allocate result array
    int* result = malloc(count * sizeof(int));
    int pos = 0;

    // Second pass: collect pairs with minimum difference
    for (int i = 0; i < n - 1; i++) {
        int diff = arr[i + 1] - arr[i];
        if (diff == minDiff) {
            result[pos++] = arr[i];
            result[pos++] = arr[i + 1];
        }
    }

    *returnSize = count;
    return result;
}

int main() {
    int n;
    scanf("%d", &n);

    int* arr = malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int returnSize;
    int* result = closestNumbers(arr, n, &returnSize);

    for (int i = 0; i < returnSize; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");

    free(arr);
    free(result);
    return 0;
}
